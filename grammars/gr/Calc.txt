Calc: expr (e_mult (e_div (numeral (fraction three_quarters)) (numeral (fraction one_and_half))) (e_mult (numeral (fraction half)) (numeral (fraction quarter))))
CalcApp: ((0.75 / 1.5) * (0.5 * 0.25))

CalcEst: kolm veerand jagatud pool teist korda ( pool korda veerand )


Calc: unitconv (main (fraction (copy2 (pair null null))) (angle radian arcsecond))
CalcApp: convert 0.0 rad to "

CalcEst: null koma null radiaani sekundites


Calc: unitconv (general fraction_default sek fraction_default (time_unit decade) fraction_default dkk fraction_default (time_unit decade))
CalcApp: ((( convert SEK to DKK ) / ( convert decade to decade )) * ((1 * 1) / (1 * 1)))

CalcEst: rootsi krooni dekaadis teeb dekaadis taani kroonides


Calc: expr (e_pow (e_minus (numeral (fraction three_quarters)) (numeral (fraction one_and_half))) (numeral (fraction (neg1 null))))
CalcApp: ((0.75 - 1.5) ^ -0)

CalcEst: kolm veerand miinus pool teist astmel miinus null


Calc: unitconv (main (fraction (neg1 null)) (currency aud isk))
CalcApp: convert -0 AUD to ISK

CalcEst: miinus null austraalia dollarit islandi kroonides


Calc: unitconv (general (fraction_copy (fraction quarter)) nzd (fraction_copy (fraction (neg1 null))) (time_unit month) (fraction_copy (fraction (copy1 null))) chf (fraction_copy (fraction (neg1 null))) (time_unit century))
CalcApp: ((( convert NZD to CHF ) / ( convert month to century )) * ((0.25 * -0) / (-0 * 0)))

CalcEst: veerand uus mere maa dollarit miinus null kuus teeb miinus null sajandis null frankides


Calc: unitconv (general (fraction_copy (fraction quarter)) rub (fraction_copy (fraction pi)) (time_unit hour) fraction_default sek (fraction_copy (fraction half)) (time_unit year))
CalcApp: ((( convert RUB to SEK ) / ( convert h to year )) * ((0.25 * 0.5) / (PI * 1)))

CalcEst: veerand rubla Pii tunnis teeb pool aastas rootsi kroonides


Calc: unitconv (general fraction_default nok fraction_default (time_unit second) (fraction_copy (fraction half)) nok (fraction_copy (fraction half)) (time_unit year))
CalcApp: ((( convert NOK to NOK ) / ( convert s to year )) * ((1 * 0.5) / (1 * 0.5)))

CalcEst: norra krooni sekundis teeb pool aastas pool norra kroonides


Calc: unitconv (general fraction_default chf fraction_default (time_unit milli_second) fraction_default gbp (fraction_copy (fraction three_quarters)) (time_unit hour))
CalcApp: ((( convert CHF to GBP ) / ( convert ms to h )) * ((1 * 0.75) / (1 * 1)))

CalcEst: franki milli sekundis teeb kolm veerand tunnis naelades


Calc: expr (e_minus (numeral (fraction half)) (e_minus (numeral (fraction pi)) (numeral (fraction quarter))))
CalcApp: (0.5 - (PI - 0.25))

CalcEst: pool miinus ( Pii miinus veerand )


Calc: expr (e_mult (e_div (numeral (fraction pi)) (numeral (fraction three_quarters))) (e_minus (numeral (fraction half)) (numeral (fraction half))))
CalcApp: ((PI / 0.75) * (0.5 - 0.5))

CalcEst: Pii jagatud kolm veerand korda ( pool miinus pool )


Calc: expr (e_plus (numeral (fraction (copy1 null))) (e_mult (numeral (fraction quarter)) (numeral (fraction three_quarters))))
CalcApp: (0 + (0.25 * 0.75))

CalcEst: null pluss ( veerand korda kolm veerand )


Calc: expr (e_mult (e_div (numeral (fraction pi)) (numeral (fraction three_quarters))) (numeral (fraction (neg1 null))))
CalcApp: ((PI / 0.75) * -0)

CalcEst: Pii jagatud kolm veerand korda miinus null


Calc: unitconv (general fraction_default isk (fraction_copy (fraction three_quarters)) (time_unit hour) (fraction_copy (fraction (copy1 null))) huf (fraction_copy (fraction three_quarters)) (time_unit minute))
CalcApp: ((( convert ISK to HUF ) / ( convert h to min )) * ((1 * 0.75) / (0.75 * 0)))

CalcEst: islandi krooni kolm veerand tunnis teeb kolm veerand minutis null forintites


Calc: unitconv (main (fraction three_quarters) (conv_energy (energy_unit joule) (prefixed_energy_unit milli joule)))
CalcApp: convert 0.75 J to mJ

CalcEst: kolm veerand dz~auli milli dz~aulides


Calc: expr (e_minus (e_pow (numeral (fraction one_and_half)) (numeral (fraction pi))) (e_plus (numeral (fraction half)) (numeral (fraction one_and_half))))
CalcApp: ((1.5 ^ PI) - (0.5 + 1.5))

CalcEst: pool teist astmel Pii miinus ( pool pluss pool teist )


Calc: expr (e_minus (e_pow (numeral (fraction pi)) (numeral (fraction three_quarters))) (e_div (numeral (fraction one_and_half)) (numeral (fraction quarter))))
CalcApp: ((PI ^ 0.75) - (1.5 / 0.25))

CalcEst: Pii astmel kolm veerand miinus ( pool teist jagatud veerand )


Calc: unitconv (main (fraction quarter) (frequency (frequency_unit hertz) (prefixed_frequency_unit deci hertz)))
CalcApp: convert 0.25 Hz to dHz

CalcEst: veerand hertsi detsi hertsides


Calc: unitconv (main (fraction (neg2 (pair null null))) (frequency (frequency_unit hertz) (prefixed_frequency_unit tera hertz)))
CalcApp: convert -0.0 Hz to THz

CalcEst: miinus null koma null hertsi tera hertsides


Calc: unitconv (general fraction_default nzd fraction_default (time_unit century) (fraction_copy (fraction (copy1 null))) isk fraction_default (time_unit century))
CalcApp: ((( convert NZD to ISK ) / ( convert century to century )) * ((1 * 1) / (1 * 0)))

CalcEst: uus mere maa dollarit sajandis teeb sajandis null islandi kroonides


Calc: unitconv (general (fraction_copy (fraction (neg1 null))) jpy (fraction_copy (fraction three_quarters)) (time_unit decade) fraction_default gbp (fraction_copy (fraction three_quarters)) (time_unit hour))
CalcApp: ((( convert JPY to GBP ) / ( convert decade to h )) * ((-0 * 0.75) / (0.75 * 1)))

CalcEst: miinus null jeeni kolm veerand dekaadis teeb kolm veerand tunnis naelades


Calc: expr (e_pow (numeral (fraction one_and_half)) (e_pow (numeral (fraction three_quarters)) (numeral (fraction quarter))))
CalcApp: (1.5 ^ (0.75 ^ 0.25))

CalcEst: pool teist astmel ( kolm veerand astmel veerand )


Calc: unitconv (general fraction_default eek fraction_default (time_unit week) fraction_default aud fraction_default (time_unit decade))
CalcApp: ((( convert EEK to AUD ) / ( convert week to decade )) * ((1 * 1) / (1 * 1)))

CalcEst: krooni nädalas teeb dekaadis austraalia dollarites


Calc: expr (e_pow (e_pow (numeral (fraction three_quarters)) (numeral (fraction pi))) (e_minus (numeral (fraction half)) (numeral (fraction quarter))))
CalcApp: ((0.75 ^ PI) ^ (0.5 - 0.25))

CalcEst: kolm veerand astmel Pii astmel ( pool miinus veerand )


Calc: expr (e_pow (e_mult (numeral (fraction three_quarters)) (numeral (fraction quarter))) (numeral (fraction (copy1 null))))
CalcApp: ((0.75 * 0.25) ^ 0)

CalcEst: kolm veerand korda veerand astmel null


Calc: expr (e_mult (e_plus (numeral (fraction quarter)) (numeral (fraction three_quarters))) (numeral (fraction three_quarters)))
CalcApp: ((0.25 + 0.75) * 0.75)

CalcEst: veerand pluss kolm veerand korda kolm veerand


Calc: unitconv (general (fraction_copy (fraction half)) eek fraction_default (time_unit nano_second) (fraction_copy (fraction pi)) eek fraction_default (time_unit micro_second))
CalcApp: ((( convert EEK to EEK ) / ( convert ns to µs )) * ((0.5 * 1) / (1 * PI)))

CalcEst: pool krooni nano sekundis teeb mikro sekundis Pii kroonides


Calc: unitconv (main (fraction three_quarters) (conv_energy (prefixed_energy_unit micro calorie) (prefixed_energy_unit hecto calorie)))
CalcApp: convert 0.75 µcal to hcal

CalcEst: kolm veerand mikro kalorit hekto kalorites


Calc: unitconv (general (fraction_copy (fraction (copy1 null))) rub fraction_default (time_unit month) (fraction_copy (fraction one_and_half)) nzd fraction_default (time_unit second))
CalcApp: ((( convert RUB to NZD ) / ( convert month to s )) * ((0 * 1) / (1 * 1.5)))

CalcEst: null rubla kuus teeb sekundis pool teist uus mere maa dollarites


Calc: expr (numeral (fraction (neg2 (pair null null))))
CalcApp: -0.0

CalcEst: miinus null koma null


Calc: expr (e_mult (e_div (numeral (fraction half)) (numeral (fraction three_quarters))) (e_pow (numeral (fraction pi)) (numeral (fraction quarter))))
CalcApp: ((0.5 / 0.75) * (PI ^ 0.25))

CalcEst: pool jagatud kolm veerand korda ( Pii astmel veerand )


Calc: expr (e_pow (numeral (fraction pi)) (e_plus (numeral (fraction pi)) (numeral (fraction half))))
CalcApp: (PI ^ (PI + 0.5))

CalcEst: Pii astmel ( Pii pluss pool )


Calc: expr (e_mult (e_mult (numeral (fraction one_and_half)) (numeral (fraction one_and_half))) (e_div (numeral (fraction pi)) (numeral (fraction half))))
CalcApp: ((1.5 * 1.5) * (PI / 0.5))

CalcEst: pool teist korda pool teist korda ( Pii jagatud pool )


Calc: expr (e_minus (e_div (numeral (fraction half)) (numeral (fraction pi))) (e_div (numeral (fraction quarter)) (numeral (fraction pi))))
CalcApp: ((0.5 / PI) - (0.25 / PI))

CalcEst: pool jagatud Pii miinus ( veerand jagatud Pii )


Calc: unitconv (main (fraction (copy2 (pair null null))) (area (prefixed_area_unit kilo hectare) (prefixed_area_unit centi hectare)))
CalcApp: convert 0.0 kha to cha

CalcEst: null koma null kilo hektarit senti hektarites


Calc: unitconv (general (fraction_copy (fraction half)) eur fraction_default (time_unit century) (fraction_copy (fraction (neg1 null))) jpy fraction_default (time_unit micro_second))
CalcApp: ((( convert EUR to JPY ) / ( convert century to µs )) * ((0.5 * 1) / (1 * -0)))

CalcEst: pool eurot sajandis teeb mikro sekundis miinus null jeenides


Calc: unitconv (main (fraction quarter) (volume (volume_unit gallon) (volume_unit cup)))
CalcApp: convert 0.25 gal to cup_us

CalcEst: veerand gallonit tassides


Calc: unitconv (general (fraction_copy (fraction half)) isk fraction_default (time_unit year) fraction_default eek (fraction_copy (fraction half)) (time_unit milli_second))
CalcApp: ((( convert ISK to EEK ) / ( convert year to ms )) * ((0.5 * 0.5) / (1 * 1)))

CalcEst: pool islandi krooni aastas teeb pool milli sekundis kroonides


Calc: unitconv (main (fraction half) (conv_energy (prefixed_energy_unit nano calorie) (energy_unit calorie)))
CalcApp: convert 0.5 ncal to cal

CalcEst: pool nano kalorit kalorites


Calc: expr (e_minus (e_plus (numeral (fraction pi)) (numeral (fraction quarter))) (e_mult (numeral (fraction one_and_half)) (numeral (fraction three_quarters))))
CalcApp: ((PI + 0.25) - (1.5 * 0.75))

CalcEst: Pii pluss veerand miinus ( pool teist korda kolm veerand )


Calc: unitconv (main (fraction half) (conv_acceleration (acceleration (length_unit yard) (time_unit decade)) (acceleration2 (speed_unit the_speed_of_light) (time_unit minute))))
CalcApp: convert 0.5 yd*decade^-2 to c/min

CalcEst: pool jardi ruut dekaadis valgus kiirustes minutis


Calc: expr (e_mult (e_mult (numeral (fraction one_and_half)) (numeral (fraction half))) (e_plus (numeral (fraction half)) (numeral (fraction half))))
CalcApp: ((1.5 * 0.5) * (0.5 + 0.5))

CalcEst: pool teist korda pool korda ( pool pluss pool )


Calc: unitconv (main (fraction (copy1 null)) (volume (volume_unit gallon) (cube (length_unit meter))))
CalcApp: convert 0 gal to m^3

CalcEst: null gallonit kuup meetrites


Calc: unitconv (main (fraction (copy1 null)) (conv_energy (energy_unit joule) (prefixed_energy_unit milli watt_hour)))
CalcApp: convert 0 J to mW⋅h

CalcEst: null dz~auli milli vatt tundides


Calc: unitconv (main (fraction (copy1 null)) (temperature (prefixed_temperature_unit mega celsius) (temperature_unit fahrenheit)))
CalcApp: convert 0 M°C to °F

CalcEst: null mega kraadi fahrenheitides


Calc: expr (e_plus (e_pow (numeral (fraction pi)) (numeral (fraction one_and_half))) (numeral (fraction (copy1 null))))
CalcApp: ((PI ^ 1.5) + 0)

CalcEst: Pii astmel pool teist pluss null


Calc: unitconv (general fraction_default chf fraction_default (time_unit week) (fraction_copy (fraction pi)) gbp fraction_default (time_unit minute))
CalcApp: ((( convert CHF to GBP ) / ( convert week to min )) * ((1 * 1) / (1 * PI)))

CalcEst: franki nädalas teeb minutis Pii naelades


Calc: unitconv (main (fraction half) (conv_acceleration (acceleration (length_unit yard) (time_unit hour)) (acceleration2 (speed_unit the_speed_of_light) (time_unit day))))
CalcApp: convert 0.5 yd*h^-2 to c/day

CalcEst: pool jardi ruut tunnis valgus kiirustes päevas


Calc: unitconv (main (fraction quarter) (conv_acceleration (acceleration (length_unit inch) (time_unit decade)) (acceleration2 (speed_unit knot) (time_unit second))))
CalcApp: convert 0.25 in*decade^-2 to knot/s

CalcEst: veerand tolli ruut dekaadis sõlmedes sekundis


Calc: expr (e_minus (e_plus (numeral (fraction pi)) (numeral (fraction three_quarters))) (e_plus (numeral (fraction half)) (numeral (fraction three_quarters))))
CalcApp: ((PI + 0.75) - (0.5 + 0.75))

CalcEst: Pii pluss kolm veerand miinus ( pool pluss kolm veerand )



