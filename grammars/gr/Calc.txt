Calc: unitconv (general fraction_default dkk (fraction_copy (fraction quarter)) (time_unit century) (fraction_copy (fraction quarter)) aud (fraction_copy (fraction half)) (time_unit second))
CalcApp: ( ( ( convert DKK to AUD ) / ( convert century to s ) ) * ( ( 1 * 0 . 5 ) / ( 0 . 2 5 * 0 . 2 5 ) ) )

CalcEst: taani krooni veerand sajandis teeb pool sekundis veerand austraalia dollarites


Calc: unitconv (general fraction_default chf fraction_default (time_unit week) (fraction_copy (fraction pi)) eur (fraction_copy (fraction three_quarters)) (time_unit milli_second))
CalcApp: ( ( ( convert CHF to EUR ) / ( convert week to ms ) ) * ( ( 1 * 0 . 7 5 ) / ( 1 * PI ) ) )

CalcEst: franki nädalas teeb kolm veerand milli sekundis Pii eurodes


Calc: unitconv (main (fraction (copy1 null)) (angle arcminute radian))
CalcApp: convert 0 ' to rad

CalcEst: null minutit radiaanides


Calc: unitconv (main (fraction (neg2 (pair null null))) (temperature (prefixed_temperature_unit kilo celsius) (temperature_unit celsius)))
CalcApp: convert - 0 . 0 k°C to °C

CalcEst: miinus null koma null kilo kraadi kraadides


Calc: unitconv (general fraction_default nzd fraction_default (time_unit decade) fraction_default cad (fraction_copy (fraction half)) (time_unit micro_second))
CalcApp: ( ( ( convert NZD to CAD ) / ( convert decade to µs ) ) * ( ( 1 * 0 . 5 ) / ( 1 * 1 ) ) )

CalcEst: uus mere maa dollarit dekaadis teeb pool mikro sekundis kanada dollarites


Calc: unitconv (main (fraction (neg2 (pair null null))) (angle arcsecond arcsecond))
CalcApp: convert - 0 . 0 " to "

CalcEst: miinus null koma null sekundit sekundites


Calc: exp (e_pow (e_mult (numeral (fraction one_and_half)) (numeral (fraction half))) (e_div (numeral (fraction half)) (numeral (fraction three_quarters))))
CalcApp: ( ( 1 . 5 * 0 . 5 ) ^ ( 0 . 5 / 0 . 7 5 ) )

CalcEst: pool teist korda pool astmel ( pool jagatud kolm veerand )


Calc: exp (numeral (fraction (neg1 null)))
CalcApp: - 0

CalcEst: miinus null


Calc: exp (e_plus (e_plus (numeral (fraction half)) (numeral (fraction one_and_half))) (e_pow (numeral (fraction half)) (numeral (fraction half))))
CalcApp: ( ( 0 . 5 + 1 . 5 ) + ( 0 . 5 ^ 0 . 5 ) )

CalcEst: pool pluss pool teist pluss ( pool astmel pool )


Calc: unitconv (general (fraction_copy (fraction (neg1 null))) eek (fraction_copy (fraction (neg1 null))) (time_unit milli_second) fraction_default nzd (fraction_copy (fraction quarter)) (time_unit milli_second))
CalcApp: ( ( ( convert EEK to NZD ) / ( convert ms to ms ) ) * ( ( - 0 * 0 . 2 5 ) / ( - 0 * 1 ) ) )

CalcEst: miinus null krooni miinus null milli sekundis teeb veerand milli sekundis uus mere maa dollarites


Calc: exp (e_pow (e_plus (numeral (fraction half)) (numeral (fraction quarter))) (e_div (numeral (fraction three_quarters)) (numeral (fraction half))))
CalcApp: ( ( 0 . 5 + 0 . 2 5 ) ^ ( 0 . 7 5 / 0 . 5 ) )

CalcEst: pool pluss veerand astmel ( kolm veerand jagatud pool )


Calc: exp (e_plus (e_minus (numeral (fraction pi)) (numeral (fraction three_quarters))) (e_pow (numeral (fraction quarter)) (numeral (fraction quarter))))
CalcApp: ( ( PI - 0 . 7 5 ) + ( 0 . 2 5 ^ 0 . 2 5 ) )

CalcEst: Pii miinus kolm veerand pluss ( veerand astmel veerand )


Calc: unitconv (general (fraction_copy (fraction pi)) eur fraction_default (time_unit hour) fraction_default cad (fraction_copy (fraction (neg1 null))) (time_unit year))
CalcApp: ( ( ( convert EUR to CAD ) / ( convert h to year ) ) * ( ( PI * - 0 ) / ( 1 * 1 ) ) )

CalcEst: Pii eurot tunnis teeb miinus null aastas kanada dollarites


Calc: unitconv (general fraction_default gbp fraction_default (time_unit nano_second) (fraction_copy (fraction (neg1 null))) gbp fraction_default (time_unit second))
CalcApp: ( ( ( convert GBP to GBP ) / ( convert ns to s ) ) * ( ( 1 * 1 ) / ( 1 * - 0 ) ) )

CalcEst: naela nano sekundis teeb sekundis miinus null naelades


Calc: exp (e_plus (numeral (fraction one_and_half)) (e_plus (numeral (fraction half)) (numeral (fraction half))))
CalcApp: ( 1 . 5 + ( 0 . 5 + 0 . 5 ) )

CalcEst: pool teist pluss ( pool pluss pool )


Calc: unitconv (general (fraction_copy (fraction quarter)) eek fraction_default (time_unit decade) fraction_default gbp fraction_default (time_unit micro_second))
CalcApp: ( ( ( convert EEK to GBP ) / ( convert decade to µs ) ) * ( ( 0 . 2 5 * 1 ) / ( 1 * 1 ) ) )

CalcEst: veerand krooni dekaadis teeb mikro sekundis naelades


Calc: unitconv (main (fraction half) (conv_power (power_unit watt) (prefixed_power_unit mega watt)))
CalcApp: convert 0 . 5 W to MW

CalcEst: pool vatti mega vattides


Calc: unitconv (general (fraction_copy (fraction (copy1 null))) dkk (fraction_copy (fraction half)) (time_unit milli_second) (fraction_copy (fraction (copy1 null))) sek (fraction_copy (fraction one_and_half)) (time_unit micro_second))
CalcApp: ( ( ( convert DKK to SEK ) / ( convert ms to µs ) ) * ( ( 0 * 1 . 5 ) / ( 0 . 5 * 0 ) ) )

CalcEst: null taani krooni pool milli sekundis teeb pool teist mikro sekundis null rootsi kroonides


Calc: exp (numeral (fraction one_and_half))
CalcApp: 1 . 5

CalcEst: pool teist


Calc: exp (numeral (fraction one_and_half))
CalcApp: 1 . 5

CalcEst: pool teist


Calc: unitconv (general fraction_default rub fraction_default (time_unit century) (fraction_copy (fraction three_quarters)) eur fraction_default (time_unit second))
CalcApp: ( ( ( convert RUB to EUR ) / ( convert century to s ) ) * ( ( 1 * 1 ) / ( 1 * 0 . 7 5 ) ) )

CalcEst: rubla sajandis teeb sekundis kolm veerand eurodes


Calc: exp (e_pow (e_mult (numeral (fraction three_quarters)) (numeral (fraction half))) (e_mult (numeral (fraction half)) (numeral (fraction half))))
CalcApp: ( ( 0 . 7 5 * 0 . 5 ) ^ ( 0 . 5 * 0 . 5 ) )

CalcEst: kolm veerand korda pool astmel ( pool korda pool )


Calc: unitconv (main (fraction quarter) (length (prefixed_length_unit milli inch) (prefixed_length_unit mega foot)))
CalcApp: convert 0 . 2 5 min to Mft

CalcEst: veerand milli tolli mega jalgades


Calc: unitconv (main (fraction half) (conv_speed (speed (prefixed_length_unit giga foot) (time_unit day)) (speed (length_unit mile) (time_unit month))))
CalcApp: convert 0 . 5 Gft/day to mi/month

CalcEst: pool giga jalga päevas miilides kuus


Calc: exp (e_plus (e_div (numeral (fraction one_and_half)) (numeral (fraction quarter))) (e_plus (numeral (fraction half)) (numeral (fraction quarter))))
CalcApp: ( ( 1 . 5 / 0 . 2 5 ) + ( 0 . 5 + 0 . 2 5 ) )

CalcEst: pool teist jagatud veerand pluss ( pool pluss veerand )


Calc: exp (e_minus (e_plus (numeral (fraction pi)) (numeral (fraction quarter))) (e_mult (numeral (fraction pi)) (numeral (fraction half))))
CalcApp: ( ( PI + 0 . 2 5 ) - ( PI * 0 . 5 ) )

CalcEst: Pii pluss veerand miinus ( Pii korda pool )


Calc: unitconv (general fraction_default isk fraction_default (time_unit century) fraction_default sek (fraction_copy (fraction three_quarters)) (time_unit second))
CalcApp: ( ( ( convert ISK to SEK ) / ( convert century to s ) ) * ( ( 1 * 0 . 7 5 ) / ( 1 * 1 ) ) )

CalcEst: islandi krooni sajandis teeb kolm veerand sekundis rootsi kroonides


Calc: exp (e_mult (e_minus (numeral (fraction quarter)) (numeral (fraction quarter))) (e_pow (numeral (fraction half)) (numeral (fraction pi))))
CalcApp: ( ( 0 . 2 5 - 0 . 2 5 ) * ( 0 . 5 ^ PI ) )

CalcEst: veerand miinus veerand korda ( pool astmel Pii )


Calc: unitconv (general fraction_default usd (fraction_copy (fraction pi)) (time_unit hour) (fraction_copy (fraction pi)) jpy (fraction_copy (fraction (neg1 null))) (time_unit century))
CalcApp: ( ( ( convert USD to JPY ) / ( convert h to century ) ) * ( ( 1 * - 0 ) / ( PI * PI ) ) )

CalcEst: dollarit Pii tunnis teeb miinus null sajandis Pii jeenides


Calc: unitconv (main (fraction pi) (length (prefixed_length_unit milli yard) (prefixed_length_unit mega foot)))
CalcApp: convert PI myd to Mft

CalcEst: Pii milli jardi mega jalgades


Calc: unitconv (general (fraction_copy (fraction half)) nok (fraction_copy (fraction one_and_half)) (time_unit second) (fraction_copy (fraction three_quarters)) chf fraction_default (time_unit milli_second))
CalcApp: ( ( ( convert NOK to CHF ) / ( convert s to ms ) ) * ( ( 0 . 5 * 1 ) / ( 1 . 5 * 0 . 7 5 ) ) )

CalcEst: pool norra krooni pool teist sekundis teeb milli sekundis kolm veerand frankides


Calc: exp (e_div (numeral (fraction one_and_half)) (e_pow (numeral (fraction pi)) (numeral (fraction quarter))))
CalcApp: ( 1 . 5 / ( PI ^ 0 . 2 5 ) )

CalcEst: pool teist jagatud ( Pii astmel veerand )


Calc: unitconv (general fraction_default aud fraction_default (time_unit year) (fraction_copy (fraction (neg1 null))) rub fraction_default (time_unit hour))
CalcApp: ( ( ( convert AUD to RUB ) / ( convert year to h ) ) * ( ( 1 * 1 ) / ( 1 * - 0 ) ) )

CalcEst: austraalia dollarit aastas teeb tunnis miinus null rublades


Calc: unitconv (main (fraction (copy2 (pair null null))) (temperature (prefixed_temperature_unit giga celsius) (temperature_unit celsius)))
CalcApp: convert 0 . 0 G°C to °C

CalcEst: null koma null giga kraadi kraadides


Calc: exp (e_pow (numeral (fraction (copy1 null))) (numeral (fraction one_and_half)))
CalcApp: ( 0 ^ 1 . 5 )

CalcEst: null astmel pool teist


Calc: unitconv (general (fraction_copy (fraction (neg1 null))) chf (fraction_copy (fraction (copy1 null))) (time_unit micro_second) fraction_default chf fraction_default (time_unit day))
CalcApp: ( ( ( convert CHF to CHF ) / ( convert µs to day ) ) * ( ( - 0 * 1 ) / ( 0 * 1 ) ) )

CalcEst: miinus null franki null mikro sekundis teeb päevas frankides


Calc: unitconv (general (fraction_copy (fraction (copy1 null))) gbp fraction_default (time_unit second) fraction_default dkk (fraction_copy (fraction half)) (time_unit century))
CalcApp: ( ( ( convert GBP to DKK ) / ( convert s to century ) ) * ( ( 0 * 0 . 5 ) / ( 1 * 1 ) ) )

CalcEst: null naela sekundis teeb pool sajandis taani kroonides


Calc: unitconv (main (fraction half) (time (time_unit decade) (time_unit decade)))
CalcApp: convert 0 . 5 decade to decade

CalcEst: pool dekaadi dekaadides


Calc: unitconv (main (fraction (copy2 (pair null null))) (mass (prefixed_mass_unit micro gram) (prefixed_mass_unit tera pound)))
CalcApp: convert 0 . 0 µg to Tlb

CalcEst: null koma null mikro grammi tera naelades


Calc: exp (e_div (e_minus (numeral (fraction quarter)) (numeral (fraction one_and_half))) (e_plus (numeral (fraction three_quarters)) (numeral (fraction pi))))
CalcApp: ( ( 0 . 2 5 - 1 . 5 ) / ( 0 . 7 5 + PI ) )

CalcEst: veerand miinus pool teist jagatud ( kolm veerand pluss Pii )


Calc: exp (e_minus (e_pow (numeral (fraction half)) (numeral (fraction quarter))) (e_div (numeral (fraction three_quarters)) (numeral (fraction pi))))
CalcApp: ( ( 0 . 5 ^ 0 . 2 5 ) - ( 0 . 7 5 / PI ) )

CalcEst: pool astmel veerand miinus ( kolm veerand jagatud Pii )


Calc: unitconv (general fraction_default gbp (fraction_copy (fraction quarter)) (time_unit century) (fraction_copy (fraction pi)) sek (fraction_copy (fraction (copy1 null))) (time_unit decade))
CalcApp: ( ( ( convert GBP to SEK ) / ( convert century to decade ) ) * ( ( 1 * 0 ) / ( 0 . 2 5 * PI ) ) )

CalcEst: naela veerand sajandis teeb null dekaadis Pii rootsi kroonides


Calc: unitconv (main (fraction (copy2 (pair null null))) (frequency (frequency_unit hertz) (prefixed_frequency_unit giga hertz)))
CalcApp: convert 0 . 0 Hz to GHz

CalcEst: null koma null hertsi giga hertsides


Calc: unitconv (main (fraction one_and_half) (conv_energy (energy_unit watt_hour) (energy_unit watt_hour)))
CalcApp: convert 1 . 5 W⋅h to W⋅h

CalcEst: pool teist vatt tundi vatt tundides


Calc: unitconv (general (fraction_copy (fraction one_and_half)) chf fraction_default (time_unit nano_second) (fraction_copy (fraction one_and_half)) usd (fraction_copy (fraction quarter)) (time_unit micro_second))
CalcApp: ( ( ( convert CHF to USD ) / ( convert ns to µs ) ) * ( ( 1 . 5 * 0 . 2 5 ) / ( 1 * 1 . 5 ) ) )

CalcEst: pool teist franki nano sekundis teeb veerand mikro sekundis pool teist dollarites


Calc: unitconv (general fraction_default huf fraction_default (time_unit micro_second) fraction_default eur fraction_default (time_unit day))
CalcApp: ( ( ( convert HUF to EUR ) / ( convert µs to day ) ) * ( ( 1 * 1 ) / ( 1 * 1 ) ) )

CalcEst: forintit mikro sekundis teeb päevas eurodes


Calc: unitconv (general fraction_default nok fraction_default (time_unit decade) fraction_default usd (fraction_copy (fraction quarter)) (time_unit month))
CalcApp: ( ( ( convert NOK to USD ) / ( convert decade to month ) ) * ( ( 1 * 0 . 2 5 ) / ( 1 * 1 ) ) )

CalcEst: norra krooni dekaadis teeb veerand kuus dollarites


Calc: exp (e_minus (numeral (fraction pi)) (e_minus (numeral (fraction quarter)) (numeral (fraction pi))))
CalcApp: ( PI - ( 0 . 2 5 - PI ) )

CalcEst: Pii miinus ( veerand miinus Pii )


Calc: unitconv (general (fraction_copy (fraction pi)) jpy fraction_default (time_unit second) (fraction_copy (fraction three_quarters)) gbp (fraction_copy (fraction half)) (time_unit minute))
CalcApp: ( ( ( convert JPY to GBP ) / ( convert s to min ) ) * ( ( PI * 0 . 5 ) / ( 1 * 0 . 7 5 ) ) )

CalcEst: Pii jeeni sekundis teeb pool minutis kolm veerand naelades


Calc: unitconv (general (fraction_copy (fraction half)) nok fraction_default (time_unit month) fraction_default nzd (fraction_copy (fraction one_and_half)) (time_unit nano_second))
CalcApp: ( ( ( convert NOK to NZD ) / ( convert month to ns ) ) * ( ( 0 . 5 * 1 . 5 ) / ( 1 * 1 ) ) )

CalcEst: pool norra krooni kuus teeb pool teist nano sekundis uus mere maa dollarites



